return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
renewable=subset(data,Renewable == "Y")
lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#Color hack so it shows lowest cost/lowest renewable
plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)))+
fill = replace()
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))+
annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
renewable=subset(data,Renewable == "Y")
lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#Color hack so it shows lowest cost/lowest renewable
plotdata$color=ifelse((rownames(plotdata) ==(lowestrenew|lowestcost)),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)))+
fill = replace()
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))+
annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
renewable=subset(data,Renewable == "Y")
lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=3)+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))+
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
#TEMPORARY FUNCTION FOR SAMPLE SHINY APP
#Real functions will be expanded to include zipcode, distributor, multiple renewables
data=read.csv("16801WestPennPower.csv",header=TRUE,sep=",")
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
#renewable=subset(data,Renewable == "Y")
#lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
#lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=3)+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))+
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
#renewable=subset(data,Renewable == "Y")
#lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
#lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=3)+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
#renewable=subset(data,Renewable == "Y")
#lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
#lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5)+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
#renewable=subset(data,Renewable == "Y")
#lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
#lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
#renewable=subset(data,Renewable == "Y")
#lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
#lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red",label="Your Bill")+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
#Finds the lowest renewable
#renewable=subset(data,Renewable == "Y")
#lowestrenew = as.numeric(rownames(renewable[which(plotdata==min(plotdata$Price)),]))
#Lowest Cost
#lowestcost = as.numeric(rownames(plotdata[which(plotdata==min(plotdata$Price)),]))
#TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
#plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#plotting
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue),label="Your Bill"),size=5,color="red")+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,1000,50)
shiny::runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
data=read.csv("16801WestPennPower.csv",header=TRUE,sep=",")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
#TEMPORARY FUNCTION FOR SAMPLE SHINY APP
#Real functions will be expanded to include zipcode, distributor, multiple renewables
library(shiny)
library(ggplot2)
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
data
data$Supplier
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenew = renewable[which(data==min(data$Price)),]
lowestrenew
lowestrenew$Price
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenewtitle = paste("The Lowest Renewable Supplier is:",lowestrenew$Supplier,"@",lowestrenew$Price)
##Lowest Cost
lowestcost = plotdata[which(plotdata==min(plotdata$Price)),]
lowestcosttitle = paste("The Lowest Cost Supplier is:",lowestcost$Supplier,"@",lowestrenew$Price)
##TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
##plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#Plot function:
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(title=(lowestcosttitle),(lowestrenewtitle),x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,100,100)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenewtitle = paste("The Lowest Renewable Supplier is:",lowestrenew$Supplier,"@",lowestrenew$Price)
##Lowest Cost
lowestcost = plotdata[which(plotdata==min(plotdata$Price)),]
lowestcosttitle = paste("The Lowest Cost Supplier is:",lowestcost$Supplier,"@",lowestrenew$Price)
##TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
##plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#Plot function:
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(title=(lowestcosttitle),subtitle=(lowestrenewtitle),x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,100,100)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenewtitle = paste("The Lowest Renewable Supplier is:",lowestrenew$Supplier,"@",lowestrenew$Price)
##Lowest Cost
lowestcost = plotdata[which(plotdata==min(plotdata$Price)),]
lowestcosttitle = paste("The Lowest Cost Supplier is:",lowestcost$Supplier,"@",lowestrenew$Price)
##TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
##plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#Plot function:
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(plot.title = element_text(hjust=0, size=16),plot.subtitle = element_text(hjust=0, size=16),axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(title=(lowestcosttitle),subtitle=(lowestrenewtitle),x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,100,100)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenewtitle = paste("The Lowest Renewable Supplier is:",lowestrenew$Supplier,"@",lowestrenew$Price)
##Lowest Cost
lowestcost = plotdata[which(plotdata==min(plotdata$Price)),]
lowestcosttitle = paste("The Lowest Cost Supplier is:",lowestcost$Supplier,"@",lowestrenew$Price)
##TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
##plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#Plot function:
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(plot.title = element_text(hjust=0, size=12),plot.subtitle = element_text(hjust=0, size=12),axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(title=(lowestcosttitle),subtitle=(lowestrenewtitle),x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,100,100)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenewtitle = paste("The Lowest Renewable Supplier is:",lowestrenew$Supplier,"@",lowestrenew$Price,"per kiloWatthour")
##Lowest Cost
lowestcost = plotdata[which(plotdata==min(plotdata$Price)),]
lowestcosttitle = paste("The Lowest Cost Supplier is:",lowestcost$Supplier,"@",lowestrenew$Price,"per kiloWatthour")
##TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
##plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#Plot function:
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(plot.title = element_text(hjust=0, size=12),plot.subtitle = element_text(hjust=0, size=12),axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(title=(lowestcosttitle),subtitle=(lowestrenewtitle),x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,100,100)
plot.costco=function(data,kwh,bill){
#Resorting data into workable format
plotdata = sort.data(data,kwh,data$Type.1)
#X values for graph since data is already sorted by price.
xvalue = 1:nrow(data)
## = NEED TO ADD
##Finds the lowest renewable
##renewable=subset(data,Renewable == "Y")
lowestrenew = renewable[which(plotdata==min(plotdata$Price)),]
lowestrenewtitle = paste("The Lowest Renewable Supplier is:",lowestrenew$Supplier,"@ $",lowestrenew$Price,"per kiloWatthour")
##Lowest Cost
lowestcost = plotdata[which(plotdata==min(plotdata$Price)),]
lowestcosttitle = paste("The Lowest Cost Supplier is:",lowestcost$Supplier,"@ $",lowestrenew$Price,"per kiloWatthour")
##TO BE ADDED: Color hack so it shows lowest cost/lowest renewable
##plotdata$color=ifelse(rownames(plotdata) ==(lowestrenew|lowestcost),"True","False")
#Plot function:
plotcost=ggplot(plotdata)+
#Price Bar
geom_bar(stat="identity", aes(x=reorder(xvalue,-Price),y=Price),color="black",fill="blue")+
#CO2 Bar
geom_bar(stat="identity",aes(x=xvalue,y=(CO/10)),color="green",alpha=.3)+
#Your Bill Point
geom_point(aes(y=bill,x=median(xvalue)),size=5,color="red")+
#Hides Old Axis labels
theme(plot.title = element_text(hjust=0, size=12),plot.subtitle = element_text(hjust=0, size=12),axis.title=element_text(face="bold",size=14),axis.text.y=element_text(face="bold",size=12),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#New Axis Label
labs(title=(lowestcosttitle),subtitle=(lowestrenewtitle),x="Suppliers",y="Cost (blue)")+
#2nd Y Axis Label/Scaling
scale_y_continuous(sec.axis= sec_axis(~./max(plotdata$CO)*10000,name="Total Amount of CO2 in kg (Green)"))
#annotate("text",x=10,y=100, label="Lowest Cost")
return(plotcost)
}
plot.costco(data,100,100)
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
runApp('C:/Users/Gaming-PC/Desktop/shiny/group6')
shiny::runApp()
runApp()
runApp()
